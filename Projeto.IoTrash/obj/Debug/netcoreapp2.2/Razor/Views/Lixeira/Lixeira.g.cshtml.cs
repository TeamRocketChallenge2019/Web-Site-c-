#pragma checksum "C:\Users\carol\Documents\Fiap\Challange\WebRepos\ProjetoNovoWeb\Projeto.IoTrash\Projeto.IoTrash\Views\Lixeira\Lixeira.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "139cf2dec6d6c0986b2370b2de73baf3850a2fc1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Lixeira_Lixeira), @"mvc.1.0.view", @"/Views/Lixeira/Lixeira.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Lixeira/Lixeira.cshtml", typeof(AspNetCore.Views_Lixeira_Lixeira))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\carol\Documents\Fiap\Challange\WebRepos\ProjetoNovoWeb\Projeto.IoTrash\Projeto.IoTrash\Views\_ViewImports.cshtml"
using Projeto.IoTrash;

#line default
#line hidden
#line 2 "C:\Users\carol\Documents\Fiap\Challange\WebRepos\ProjetoNovoWeb\Projeto.IoTrash\Projeto.IoTrash\Views\_ViewImports.cshtml"
using Projeto.IoTrash.Models;

#line default
#line hidden
#line 3 "C:\Users\carol\Documents\Fiap\Challange\WebRepos\ProjetoNovoWeb\Projeto.IoTrash\Projeto.IoTrash\Views\_ViewImports.cshtml"
using Projeto.IoTrash.ViewModels;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"139cf2dec6d6c0986b2370b2de73baf3850a2fc1", @"/Views/Lixeira/Lixeira.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"722b849f90311d147040ebaa8739709481e38678", @"/Views/_ViewImports.cshtml")]
    public class Views_Lixeira_Lixeira : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onload", new global::Microsoft.AspNetCore.Html.HtmlString("MQTTConnect()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\carol\Documents\Fiap\Challange\WebRepos\ProjetoNovoWeb\Projeto.IoTrash\Projeto.IoTrash\Views\Lixeira\Lixeira.cshtml"
  
    ViewData["Title"] = "Lixeira";

#line default
#line hidden
            BeginContext(45, 40, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"pt-br\">\r\n");
            EndContext();
            BeginContext(85, 5080, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139cf2dec6d6c0986b2370b2de73baf3850a2fc14393", async() => {
                BeginContext(91, 5067, true);
                WriteLiteral(@"
    <meta charset=""UTF-8"">
    <title>IoTrash</title>
    <style>
        body {
            padding-top: 30px;
            font-family: Verdana, Arial, Helvetica, sans-serif;
            font-size: 11px;
            color: black;
            margin: 5px;
            background: #DDDDDD;
            background-size: cover;
        }

        th {
            padding: 5px;
            border-radius: 12px;
            color: #ffffff;
            background: #404040;
            border: #000000 solid 3px;
        }

        td {
            text-align: center;
            padding: 10px;
            border-radius: 10px;
            background: #666666;
            border: #000000 solid 3px;
        }
    </style>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js""></script>
    <script src=""https://www.gstatic.com/charts/loader.js""></script>
    <script>

        /***************************************************
         * Cliente MQTT
 ");
                WriteLiteral(@"        */

        // Variáveis para cliente MQTT
        var mqtt;
        var reconnectTimeout = 2000;
        var host = ""localhost"";
        var port = 51505;

        function onConnect() {
            // Conexao ao Broker
            console.log(""Conectado"");
            mqtt.subscribe(""teste/#"");
            mqtt.subscribe(""iotrash/example/toggle"");
            mqtt.subscribe(""iotrash/example/text"");
            mqtt.subscribe(""iotrash/example/integer"");
        }
        function onError(message) {
            // Ocorrencia de erro
            console.log(""Falha: "" + message.errorCode + "" "" + message.errorMessage);
            setTimeout(MQTTConnect, reconnectTimeout);
        }
        function onMessageArrived(msg) {
            // Mensagem recebida
            console.log(""Mensagem: "" + msg.destinationName + ""="" + msg.payloadString);

            if (msg.destinationName == ""teste/lixo"") {
                // Temperatura
                dataLix.setValue(0, 1, msg.payloadSt");
                WriteLiteral(@"ring);
                chartLix.draw(dataLix, optionsLix);
            } else if (msg.destinationName == ""teste/lixo"") {
                // Umidade
                dataUmi.setValue(0, 1, msg.payloadString);
                chartUmi.draw(dataUmi, optionsUmi);
            } else if (msg.destinationName == ""iotrash/example/integer"") {
                // Inteiro
                dataInt.setValue(0, 1, msg.payloadString);
                chartInt.draw(dataInt, optionsInt);
            } else if (msg.destinationName == ""iotrash/example/toggle"") {
                // Toggle
                var t = document.getElementById(""toggle"");
                if (msg.payloadString == 1) {
                    t.innerText = ""Status: Ligado"";
                    t.style.background = ""rgb(170, 236, 83)"";
                } else {
                    t.innerText = ""Status: Desligado"";
                    t.style.background = ""rgb(227, 0, 14)"";
                }
            } else if (msg.destinationName == ""iotrash/");
                WriteLiteral(@"example/text"") {
                // Data / Hora
                var t = new Date(msg.payloadString);
                document.getElementById(""toggle"").innerText = ""Atualização: "" + t.toLocaleDateString() + "" "" + t.toLocaleTimeString();
            }
        }
        function MQTTConnect() {
            // Conecta no Broker
            console.log(""Conectando "" + host + "" "" + port);
            mqtt = new Paho.MQTT.Client(host, port, ""IeCJSClient"" + parseInt(Math.random() * 1e5));
            var options = {
                timeout: 10,
                keepAliveInterval: 10,
                onSuccess: onConnect,
                onFailure: onError
            };
            mqtt.onMessageArrived = onMessageArrived;
            mqtt.onConnectionLost = onError;
            mqtt.connect(options);
        }

        /***************************************************
         * Gráficos
         */

        // Instancias dos gráficos
        google.charts.load('current', { 'packages': ['");
                WriteLiteral(@"gauge'], 'language': 'pt-br', 'mapsApiKey': 'AIzaSyBWF8UvD9TyJSKsSCKP3PtHisRPbG4zuRA' });
        google.charts.setOnLoadCallback(drawLix);


        // Variáveis para gráficos
        var chartLix;
        var dataLix;
        var optionsLix;

        function drawLix() {
            // Desenha Umidade
            dataLix = google.visualization.arrayToDataTable([
                ['Label', 'Value'],
                ['Lixo. %', 0]
            ]);
            optionsLix = {
                min: 0, max: 100,
                majorTicks: [""0"", ""10"", ""20"", ""30"", ""40"", ""50"", ""60"", ""70"", ""80"", ""90"", ""100""],
                minorTicks: 2,
                redFrom: 70, redTo: 100,
                yellowFrom: 0, yellowTo: 70,
                yellowColor: ""#00FF00"",

            };
            chartLix = new google.visualization.Gauge(document.getElementById('lix'));
            chartLix.draw(dataLix, optionsLix);
        }


    </script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5165, 31, true);
            WriteLiteral("\r\n\r\n\r\n<h2>Volume Lixeira</h2>\r\n");
            EndContext();
            BeginContext(5196, 340, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139cf2dec6d6c0986b2370b2de73baf3850a2fc110904", async() => {
                BeginContext(5225, 304, true);
                WriteLiteral(@"
    <table align=""center"">
        <tr>
            <th colspan=""1"">IoTrash</th>
        </tr>
        <tr>
            <td id=""lix"" style=""width: 300px; height: 300px;""></td>
        </tr>
        <tr>
            <th id=""toggle"">Status:   <br>Atualização: </th>
        </tr>
    </table>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5536, 13, true);
            WriteLiteral("\r\n</html>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
